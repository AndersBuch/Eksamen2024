      <div class="dashboard">

    <!-- Main Content -->
    <main class="main-content">
      <header>
        <button class="sidebar-toggle">â˜°</button>
        <h1>Users</h1>
      </header>

      <!-- Navigation/Search -->
      <div class="search-bar">
        <input type="text" placeholder="Search...">
        <div class="search-icon">
          <img src="../img/1st trailing-icon.svg" alt="Search Icon">
        </div>
      </div>

      <!-- Project Table -->
      <div class="project-table">

        <!-- Table Header (Make sure this stays) -->
        <div class="table-header-users">
          <span>User Name</span>
          <span>Email</span>
          <span>Admin?</span>
          <span>Actions</span>
        </div>
        {{#each users}}
        <div class="row-container-users">
          <div class="table-row-users" data-user-id="{{this.user_id}}">
            <span>{{this.user_name}}</span>
            <span>{{this.email}}</span>
            {{#if this.admin}}
            <span>yes</span>
            {{else}}
            <span>No</span>
            {{/if}}
            <span class="actions-users">
              <button data-open-manageuser type="button" class="manage-user-btn">Manage User</button>
            </span>
          </div>
        </div>
        {{/each}}
      </div>
    </main>
  </div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const openManageUsers = document.querySelectorAll("[data-open-manageuser]");
  const manageUsersModal = document.querySelector("[data-manage-user]");
  const form = manageUsersModal.querySelector("form");


  openManageUsers.forEach(button => {
    button.addEventListener("click", async () => {
      const userId = button.closest(".table-row-users").getAttribute("data-user-id");

      try {
        const response = await fetch(`/get-user/${userId}`);
        if (!response.ok) throw new Error('Failed to fetch user data');
        const user = await response.json();

        // Populate modal fields
        form.querySelector('input[name="changeName"]').value = user.user_name;
        form.querySelector('input[name="changeEmail"]').value = user.email;
        form.querySelector('input[name="changePassword"]').value = user.password;
        form.querySelector('button[type="submit"]').setAttribute('data-user-id', userId);

        manageUsersModal.showModal();
      } catch (error) {
        console.error(error);
        alert('Failed to load user details');
      }
    });
  });

  // Handle form submission
  form.addEventListener("submit", async (event) => {
    event.preventDefault();
    const userId = event.target.querySelector('button[type="submit"]').getAttribute('data-user-id');
    const userName = form.querySelector('input[name="changeName"]').value;
    const email = form.querySelector('input[name="changeEmail"]').value;
    const password = form.querySelector('input[name="changePassword"]').value;

    try {
      const response = await fetch('/update-user', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId, userName, email, password }),
      });

      if (response.ok) {
        alert('User details updated successfully');
        window.location.reload();
      } else {
        const error = await response.json();
        alert('Error: ' + error.message);
      }
    } catch (error) {
      console.error(error);
      alert('Failed to update user details');
    }
  });

    const deleteUserButton = manageUsersModal.querySelector("[data-delete-user]");

    // Handle delete user button inside the modal
    deleteUserButton.addEventListener("click", async () => {
    const userId = manageUsersModal.querySelector('button[type="submit"]').getAttribute('data-user-id');

    if (!userId) {
      console.error("User ID not found");
      return alert("Failed to find user ID");
    }

    // Confirm deletion
    const confirmDelete = confirm("Are you sure you want to delete this user?");
    if (!confirmDelete) return;

    try {
      const response = await fetch('/delete-user', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId }),
      });

      if (response.ok) {
        alert('User deleted successfully');
        manageUsersModal.close(); // Close the modal
        window.location.reload(); // Refresh the page to reflect changes
      } else {
        const error = await response.json();
        alert('Error: ' + error.message);
      }
    } catch (error) {
      console.error('Catch block error:', error); // Log any error caught
      alert('Failed to delete user');
    }
  });
});
</script>

<dialog data-manage-user class="manage-users-model">
  <h1>Manage User "{{this.user_name}}"</h1>
  <form action="">
    <div>
      <label for="changeName">Name</label>
      <input type="text" name="changeName" value="{{this.user_name}}">
    </div>
    <div>
      <label for="changeEmail">Email</label>
      <input type="email" name="changeEmail" value="{{this.email}}">
    </div>
    <div>
      <label for="changePassword">Password</label>
      <input type="text" name="changePassword" value="{{this.password}}">
    </div>

    <div>
      {{#if this.admin}}
      <button class="remove-admin" data-user-id="{{this.user_id}}" data-is-admin="false">Remove admin</button>
      {{else}}
      <button class="add-admin" data-user-id="{{this.user_id}}" data-is-admin="true">Add admin</button>
      {{/if}}
    </div>

    <div>
      <button data-delete-user class="delete-user-btn">Delete</button>
    </div>

    <button type="submit">Save</button>
    <button formmethod="dialog">Cancel</button>
  </form>
</dialog>



      <script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.add-admin, .remove-admin').forEach(button => {
      button.addEventListener('click', async () => {
        const userId = button.getAttribute('data-user-id');
        const isAdmin = button.getAttribute('data-is-admin') === 'true';

        try {
          const response = await fetch('/set-admin-status', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId, isAdmin }),
          });

          if (response.ok) {
            alert('Admin status updated');
            window.location.reload(); // Reload to reflect changes
          } else {
            const error = await response.json();
            alert('Error: ' + error.message);
          }
        } catch (err) {
          console.error('Request failed', err);
          alert('Failed to update admin status');
        }
      });
    });
  });
</script>



